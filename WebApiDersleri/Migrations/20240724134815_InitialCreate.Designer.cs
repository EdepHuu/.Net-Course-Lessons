// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApiDersleri.Models;

#nullable disable

namespace WebApiDersleri.Migrations
{
    [DbContext(typeof(ProductsContext))]
    [Migration("20240724134815_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebApiDersleri.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            IsActive = true,
                            Price = 10000m,
                            ProductName = "Iphone 11"
                        },
                        new
                        {
                            ProductId = 2,
                            IsActive = true,
                            Price = 20000m,
                            ProductName = "Iphone 12"
                        },
                        new
                        {
                            ProductId = 3,
                            IsActive = true,
                            Price = 30000m,
                            ProductName = "Iphone 13"
                        },
                        new
                        {
                            ProductId = 4,
                            IsActive = true,
                            Price = 40000m,
                            ProductName = "Iphone 14"
                        },
                        new
                        {
                            ProductId = 5,
                            IsActive = true,
                            Price = 50000m,
                            ProductName = "Iphone 15"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
